"use strict";
class RingBuffer {
    constructor(capacity) {
        this.valueArr = [];
        this.capacity = capacity;
    }
    push(value) {
        this.valueArr = [...this.valueArr, value];
        if (this.valueArr.length > this.capacity) {
            this.valueArr.splice(1);
        }
        return this.valueArr;
    }
    peek() {
        const value = this.valueArr[this.valueArr.length - 1];
        return value;
    }
    pop() {
        const value = this.valueArr.splice(this.valueArr.length - 2, 1);
        return value[0];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmluZ0J1ZmZlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJpbmdCdWZmZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQWFBLE1BQU0sVUFBVTtJQUdkLFlBQVksUUFBZ0I7UUFGNUIsYUFBUSxHQUFRLEVBQUUsQ0FBQztRQUdqQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQVE7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMxQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDeEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDekI7UUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQztJQUVNLElBQUk7UUFFVCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVNLEdBQUc7UUFFUixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDaEUsT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnQgYSBjbGFzcyBuYW1lZCByaW5nIGJ1ZmZlciB3aXRoIGZpeGVkIGNhcGFjaXR5IHN1Y2ggdGhhdFxuICpcbiAqIGNvbnN0cnVjdG9yOiB0YWtlcyB0aGUgY2FwYWNpdHkgZm9yIHRoZSByaW5nIGJ1ZmZlclxuICpcbiAqIHB1c2g6IGFkZHMgYSB2YWx1ZSB0byB0aGUgcmluZyBidWZmZXIuXG4gKiBwb3A6IHJlbW92ZXMgdGhlIGxhc3QgdmFsdWUgZnJvbSB0aGUgcmluZyBidWZmZXIgb3IgdW5kZWZpbmVkIGlmIGl0J3MgZW1wdHkuXG4gKiBwZWVrOiByZXR1cm5zIHRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBtb3N0IHJlY2VudCB2YWx1ZSBhZGRlZCBvciB1bmRlZmluZWQgaWYgbm9uZSBoYXZlIGJlZW4gYWRkZWRcbiAqXG4gKiBJZiB3ZSBoYXZlIHRvbyBtYW55IHZhbHVlcyAoZXhjZWVkaW5nIGNhcGFjaXR5KSB0aGUgb2xkZXN0IHZhbHVlcyBhcmUgbG9zdC5cbiAqXG4gKiBUaGUgb3JkZXJpbmcgb2YgdGhlIHB1c2ggb3BlcmF0aW9ucyBtdXN0IGJlIGtlcHQuXG4gKi9cbmNsYXNzIFJpbmdCdWZmZXI8VD4ge1xuICB2YWx1ZUFycjogVFtdID0gW107XG4gIGNhcGFjaXR5OiBudW1iZXI7XG4gIGNvbnN0cnVjdG9yKGNhcGFjaXR5OiBudW1iZXIpIHtcbiAgICB0aGlzLmNhcGFjaXR5ID0gY2FwYWNpdHk7XG4gIH1cblxuICBwdWJsaWMgcHVzaCh2YWx1ZTogVCkge1xuICAgIHRoaXMudmFsdWVBcnIgPSBbLi4udGhpcy52YWx1ZUFyciwgdmFsdWVdO1xuICAgIGlmICh0aGlzLnZhbHVlQXJyLmxlbmd0aCA+IHRoaXMuY2FwYWNpdHkpIHtcbiAgICAgIHRoaXMudmFsdWVBcnIuc3BsaWNlKDEpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy52YWx1ZUFycjtcbiAgfVxuXG4gIHB1YmxpYyBwZWVrKCk6IFQgfCB1bmRlZmluZWQge1xuICAgIC8vIG5vdCBpbXBsZW1lbnRlZFxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy52YWx1ZUFyclt0aGlzLnZhbHVlQXJyLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIHB1YmxpYyBwb3AoKTogVCB8IHVuZGVmaW5lZCB7XG4gICAgLy8gbm90IGltcGxlbWVudGVkXG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLnZhbHVlQXJyLnNwbGljZSh0aGlzLnZhbHVlQXJyLmxlbmd0aCAtIDIsIDEpO1xuICAgIHJldHVybiB2YWx1ZVswXTtcbiAgfVxufVxuIl19